name: release-build

on:
  workflow_run:
    workflows:
      - "CI"
    branches: [ main ]
    types:
      - completed

permissions:
  contents: write
  packages: write
  pull-requests: read
  issues: write
  id-token: write
  attestations: write

jobs:
  semantic-release:
    if: "${{ github.event.workflow_run.conclusion == 'success' && !contains(github.event.commits[0].message, 'chore(release):') }}"
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Create empty semantic_release_version.txt file
        run: touch semantic_release_version.txt

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --debug

      - name: Get the version
        id: get_version
        run: |
          echo "VERSION=$(cat semantic_release_version.txt)" >> $GITHUB_ENV

      - name: Set up QEMU
        if: ${{ env.VERSION != '' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ env.VERSION != '' }}
        uses: docker/setup-buildx-action@v3.7.1
        with:
          platforms: linux/amd64,linux/arm64

      - name: Docker Login in GHCR
        uses: docker/login-action@v3.3.0
        if: ${{ env.VERSION != '' }}
        id: configure-login-ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.6.1
        if: ${{ env.VERSION != '' }}
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}

      - name: Build and push
        uses: docker/build-push-action@v6.10.0
        id: build-push
        if: ${{ env.VERSION != '' }}
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up cosign
        if: ${{ env.VERSION != '' }}
        uses: sigstore/cosign-installer@v3

      - name: Sign Container Image
        if: ${{ env.VERSION != '' }}
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ github.repository }}:${{ env.VERSION }} -y
        shell: bash
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Check images
        if: ${{ env.VERSION != '' }}
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ env.VERSION }}
          docker pull ghcr.io/${{ github.repository }}:${{ env.VERSION }}
          cosign verify --key env://COSIGN_PUBLIC_KEY ghcr.io/${{ github.repository }}:${{ env.VERSION }}
        env:
          COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}

      - id: create-sbom-file
        run: |
          SBOM_OUTPUT_FILE="${{ github.repository }}.spdx.json"
          SBOM_OUTPUT_FILE=${SBOM_OUTPUT_FILE//\//-}
          echo SBOM_OUTPUT_FILE=${SBOM_OUTPUT_FILE} >> $GITHUB_ENV

      - uses: anchore/sbom-action@v0
        id: create-sbom
        if: ${{ env.VERSION != '' }}
        with:
          image: ghcr.io/${{ github.repository }}:${{ env.VERSION }}
          output-file: ${{ env.SBOM_OUTPUT_FILE }}

      - name: Attest
        uses: actions/attest-sbom@v2
        id: attest
        if: ${{ env.VERSION != '' }}
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.build-push.outputs.digest }}
          sbom-path: ${{ env.SBOM_OUTPUT_FILE }}
          push-to-registry: true

      - uses: anchore/sbom-action/publish-sbom@v0
        if: ${{ env.VERSION != '' }}
        with:
          sbom-artifact-match: ${{ env.SBOM_OUTPUT_FILE }}

      - name: Upload SBOM asset to release
        uses: softprops/action-gh-release@v2
        if: ${{ env.VERSION != '' }}
        with:
          files: ${{ env.SBOM_OUTPUT_FILE }}
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}

    outputs:
      version: ${{ env.VERSION }}
